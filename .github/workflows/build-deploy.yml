name: Terraform Apply

on:
  push:
    branches:
      - main

jobs:
  terraform_apply:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./terraform
      run: terraform init -input=false

    - name: Terraform validation
      working-directory: ./terraform
      run: terraform validate

    - name: Terraform apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./terraform
      run: terraform apply -auto-approve -input=false

  build:
    needs: terraform_apply
    name: Build Images
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: (Auth microservice) Build, tag, and push image to AWS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: microservice-auth
      run: |
        cd microservice-auth
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA

    - name: (Frontend microservice) Build, tag, and push image to AWS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: microservice-frontend
      run: |
        cd microservice-auth
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.6.1"
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Update Kubernetes resources
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_AUTH_REPOSITORY: microservice-auth
        ECR_FRONTEND_REPOSITORY: microservice-frontend
      run: |
       cd deployment/base
       kustomize edit set image $ECR_REGISTRY/$ECR_AUTH_REPOSITORY=$ECR_REGISTRY/$ECR_AUTH_REPOSITORY:$GITHUB_SHA
       kustomize edit set image $ECR_REGISTRY/$ECR_FRONTEND_REPOSITORY=$ECR_REGISTRY/$ECR_FRONTEND_REPOSITORY:$GITHUB_SHA
       cat kustomization.yaml
        
    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -am "Bump docker tag"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GH_TOKEN }}